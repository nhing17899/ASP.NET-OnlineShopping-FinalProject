@page "/Pants"
@inject HttpClient http

<style>

    .pants {
        width: 250px;
        height: 250px;
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
        text-align: center;
        border-radius: 10px;
    }

    .column {
        float: left;
        width: 50%;
        padding: 10px;
    }

    .row:after {
        content: "";
        display: table;
        clear: both;
    }

</style>

@if (pantsVisible)
{
    <div>@pants</div>
    <br />
    <h3 style="font-weight:bolder;font-size:24px;color:#000000;font-family:'Comic Sans MS';">Pants</h3>
    <br />
    <hr />
    <div class="row">
        <div class="column left">
            <FluentCard>
                <img src="./img/pants1.png" width="390" height="630" />
                <br />
                <p>Mens - Light Blue Jeans</p>
                <br />
                <FluentButton Appearance="Appearance.Stealth">Small</FluentButton>
                <FluentButton Appearance="Appearance.Stealth">Medium</FluentButton>
                <FluentButton Appearance="Appearance.Stealth">Large</FluentButton>
                <FluentButton Appearance="Appearance.Stealth">X-Large</FluentButton>
                <br />
                <FluentButton OnClick="(() => AddToCart(5))" Appearance="Appearance.Accent">Add to Cart</FluentButton>
               
            </FluentCard>
        </div>
        <div class="column right">
            <FluentCard>
                <img src="./img/pants2.png" width="390" height="630" />
                <br />
                <p>Mens - Black Jeans</p>
                <br />
                <FluentButton Appearance="Appearance.Stealth">Small</FluentButton>
                <FluentButton Appearance="Appearance.Stealth">Medium</FluentButton>
                <FluentButton Appearance="Appearance.Stealth">Large</FluentButton>
                <FluentButton Appearance="Appearance.Stealth">X-Large</FluentButton>
                <br />
                <FluentButton OnClick="(() => AddToCart(6))" Appearance="Appearance.Accent">Add to Cart</FluentButton>
            </FluentCard>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="column left">
            <FluentCard>
                <img src="./img/pants3.png" width="390" height="630" />
                <br />
                <p>Mens - Grey Jeans</p>
                <br />
                <FluentButton Appearance="Appearance.Stealth">Small</FluentButton>
                <FluentButton Appearance="Appearance.Stealth">Medium</FluentButton>
                <FluentButton Appearance="Appearance.Stealth">Large</FluentButton>
                <FluentButton Appearance="Appearance.Stealth">X-Large</FluentButton>
                <br />
                <FluentButton OnClick="(() => AddToCart(7))" Appearance="Appearance.Accent">Add to Cart</FluentButton>
            </FluentCard>
        </div>
        <div class="column right">
            <FluentCard>
                <img src="./img/pants4.png" width="390" height="630" />
                <br />
                <p>Mens - Blue Jeans</p>
                <br />
                <FluentButton Appearance="Appearance.Stealth">Small</FluentButton>
                <FluentButton Appearance="Appearance.Stealth">Medium</FluentButton>
                <FluentButton Appearance="Appearance.Stealth">Large</FluentButton>
                <FluentButton Appearance="Appearance.Stealth">X-Large</FluentButton>
                <br />
                <FluentButton OnClick="(() => AddToCart(8))" Appearance="Appearance.Accent">Add to Cart</FluentButton>
            </FluentCard>
        </div>
    </div>
}
<FluentSpacer />

@code {

    [Parameter]
    public string Title { get; set; } = "Pants";

    [Parameter]
    public EventCallback<string> Clicked { get; set; }

    [Parameter]
    public RenderFragment pants { get; set; } = default!;

    private bool pantsVisible = true;

    public void ToggleContent()
    {
        pantsVisible = !pantsVisible;
        StateHasChanged();
    }

    public async void AddToCart(int itemId)
    {
        await http.PostAsync($"/api/CartEntry/{itemId}", null);
    }

}
