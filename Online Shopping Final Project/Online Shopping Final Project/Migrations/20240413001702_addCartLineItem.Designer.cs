// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Online_Shopping_Final_Project.Data;

#nullable disable

namespace OnlineShoppingFinalProject.Migrations
{
    [DbContext(typeof(ShoppingContext))]
    [Migration("20240413001702_addCartLineItem")]
    partial class addCartLineItem
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Online_Shopping_Final_Project.Entities.CartEntry", b =>
                {
                    b.Property<int>("CartEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartEntryId"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("CartEntryId");

                    b.HasIndex("ItemId");

                    b.ToTable("CartEntry");
                });

            modelBuilder.Entity("Online_Shopping_Final_Project.Entities.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<string>("ItemDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("ItemPrice")
                        .HasColumnType("real");

                    b.HasKey("ItemId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            ItemId = 1,
                            ItemDescription = "Black cotton crew neck T-shirt for Men",
                            ItemName = "Mens - Black T-shirt",
                            ItemPrice = 15.5f
                        },
                        new
                        {
                            ItemId = 2,
                            ItemDescription = "Green cotton crew neck T-shirt for Men",
                            ItemName = "Mens - Green T-shirt",
                            ItemPrice = 15.25f
                        },
                        new
                        {
                            ItemId = 3,
                            ItemDescription = "Pink cotton crew neck T-shirt for Men",
                            ItemName = "Mens - Pink T-shirt",
                            ItemPrice = 14.5f
                        },
                        new
                        {
                            ItemId = 4,
                            ItemDescription = "Biege cotton crew neck T-shirt for Men",
                            ItemName = "Mens - Biege T-shirt",
                            ItemPrice = 13f
                        },
                        new
                        {
                            ItemId = 5,
                            ItemDescription = "Light Blue Denim Jeans for Men",
                            ItemName = "Mens - Light Blue Jeans",
                            ItemPrice = 22.25f
                        },
                        new
                        {
                            ItemId = 6,
                            ItemDescription = "Black Denim Jeans for Men",
                            ItemName = "Mens - Black Jeans",
                            ItemPrice = 25.5f
                        },
                        new
                        {
                            ItemId = 7,
                            ItemDescription = "Grey Denim Jeans for Men",
                            ItemName = "Mens - Grey Jeans",
                            ItemPrice = 27.25f
                        },
                        new
                        {
                            ItemId = 8,
                            ItemDescription = "Grey Denim Jeans for Men",
                            ItemName = "Mens - Blue Jeans",
                            ItemPrice = 30f
                        });
                });

            modelBuilder.Entity("Online_Shopping_Final_Project.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OrderId");

                    b.ToTable("OrderHistory");
                });

            modelBuilder.Entity("Online_Shopping_Final_Project.Entities.CartEntry", b =>
                {
                    b.HasOne("Online_Shopping_Final_Project.Entities.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });
#pragma warning restore 612, 618
        }
    }
}
